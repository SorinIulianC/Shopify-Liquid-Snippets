{%- liquid
  # this can be a settings from somewhere, or a metafield, for security purposes i advice you encode / decode it

  assign correct_password = 'test'

  # you can render this inside a layout and use that for an entire page, or just wrap this around a part of section you want to password protect it
  assign output = output | default: '<div>Password is correct<div/>'

  # because the cart is the only way we can store data between pages.

  assign inputed_password = cart.attributes.password
-%}
{% comment %} this are utilitaries just replace with whatever update cart method you're using, this one is for showing only {% endcomment %}
<script>
  async function updateCartAttributes({ attr }) {
    await fetch(`${window.Shopify.routes.root}cart/update.js`, {
      method: 'POST',
      body: JSON.stringify({ attributes: attr }),
      headers: {
        'Content-Type': 'application/json',
      },
    });
    window.location.reload()
  }
</script>
{% comment %} just some styling {% endcomment %}
<style>
  .password-form {
    margin-top: 100px;
    margin-bottom: 100px;
  }
  .password-form__wrapper, .password-form {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
</style>
{% comment %}end utilitaries{% endcomment %}


<div class="password-form">
  {%- if inputed_password == correct_password -%}
    {% comment %} happy path {% endcomment %}
    {{- output -}}
  {%- else -%}
    {%- if inputed_password -%}
      {% comment %} invalid password path {% endcomment %}
      <div>Incorrect Password</div>
    {%- endif -%}
    {% comment %} no password path {% endcomment %}
    <div class="password-form__wrapper">
      <label for="password-input" class="">Input Password</label>
      <input
        type="password"
        class="password-form__input"
        name="password"
        id="Password-input"
        required="required"
        aria-required="true"
      >
      <button id="Password-submit">Submit</button>
    </div>
    <script>
      const input = document.querySelector('#Password-input');
      document.querySelector('#Password-submit').addEventListener('click', async () => {
        await updateCartAttributes({ attr: { password: input.value } });
      });
    </script>
  {%- endif -%}
  <button onclick="updateCartAttributes({attr: {password: ''}})">Reset</button>
</div>
{% schema %}
{
  "name": "Default Page",
  "tag": "section",
  "settings": []
}
{% endschema %}
